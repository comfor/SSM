<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	F2快捷键查看标签的信息
	？：表示子标签可以没有，若有则最多只能有一个，即小于等于1
	*： 表示子标签可以没有，若有则可以多个，即大于等于0
	+： 表示子标签最少要有一个，即大于等于1
	没符号：表示有且只能有一个，即等于1
 -->
 
<!-- 如下为log4j2的配置信息 在mybatis.xml配置文件中可以设置打日志是用log4j还是log4j2-->

<!-- 
<configuration/>标签的 status 属性用于设置 Log4j2 自身运行的日志显示级别，一般为OFF，不显示。 当然，也可以设置为 ERROR、 DEBUG 等其它级别

<Console/>标签的 target 属性用于设置输出的目标形式，其值一般为：SYSTEM_OUT 或 SYSTEM_ERR

<File/>标签的 fileName 属性用于设置文件的文件保存路径及文件名。如本例的意思是，日志文件名为 test.log，将其存放在当前项目的根目录下的 logs子目录中。

<RollingFile/>标签的<SizeBasedTriggeringPolicy/>子标签用于指定每一个日志文件最大文件大小。当达到这个指定值后，会自动再新建一个日志文件。
		fileName 指定存放目录及第一个日志文件名。 filePattern 指定新创建的日志文件的文件名。本例还会对文件进行压缩。
 -->
 
<configuration status="OFF">  
	<appenders>
		<!-- 控制台输出日志信息 -->
		<Console name="myConsole" target="SYSTEM_OUT">
			<PatternLayout pattern="[%-5p][%d{yyyy-MM-dd HH:mm:ss}] [%c %L] %m%n" />
		</Console>
		<!-- 将日志输出到指定文件中 -->
		<File name="myLogFile" fileName="logs/test.log" append="true">
            <PatternLayout pattern="[%-5p][%d{yyyy-MM-dd HH:mm:ss}] [%c %L] %m%n"/>
        </File>
        <!--  将日志存在指定文件中，并打包 -->
        <RollingFile name="myRollingFile" fileName="logs/app.log" filePattern="logs/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="[%-5p][%d{yyyy-MM-dd HH:mm:ss}] [%c %L] %m%n"/>
            <SizeBasedTriggeringPolicy size="10M"/>
        </RollingFile>
	</appenders>
<!-- 
<loggers/>标签用于配置根 Logger 对象，以指定所使用的日志记录器，及显示的级别。
其子标签<root/>用于指定所使用的日志记录器。该子标签的属性 level 用于指定显示级别。
而日志记录器是通过<root/>的子标签<appender-ref/>来引用<appenders/>中定义好的记录器的。
需要注意的是，只要在<appenders/>中定义了<File/>、 <RollingFile/>等，且在其中指定了
日志存放的目录，那么这些目录就会自动创建。无论在<loggers/>的<root/>中是否声明使用它们。
 -->	
	<loggers>
		<!-- 设置要打印信息的接口 -->
		<logger name="com.comfor.dao" level="info">
			<appender-ref ref="myConsole" />
		</logger>
		<!-- 日志打印的级别 -->
		<root level="trace">
			<appender-ref ref="myConsole" />
		<!-- 
			<appender-ref ref="myLogFile" />
			<appender-ref ref="myRollingFile" /> 
		 -->
		</root>
		
		<!-- 设置第二种情况，<logger><root>是成对出现的 -->
<!-- 		
		<logger name="com.comfor.dao.IStudentDynamicProxyDao" level="info">
			<appender-ref ref="myLogFile" />
		</logger>
		<root level="trace">
			<appender-ref ref="myLogFile" />
		</root>
 -->		
	</loggers>	
</configuration>






